{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/Gitlab/mental-health-care/web/src/components/CounselorSignup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from \"react-router\";\nimport axios from 'axios';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({// email:yup\n  //   .string()\n  //   .email(\"이메일 형식으로 입력하세요\")\n  //   .required(\"아이디를 입력해주세요\"),\n  // password: yup\n  //   .string()\n  //   .min(8, '8자리 이상으로 만들어주세요')\n  //   .max(16)\n  //   .matches(\"^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\",\"비밀번호는 영문/ 숫자/ 특수문자를 모두 포함해야 합니다.\")\n  //   .required(\"비밀번호를 입력해주세요\")\n  //   ,\n  // confirm: yup\n  //   .string()\n  //   .oneOf([yup.ref('password'), null],\n  //     '비밀번호가 일치하지 않습니다.')\n  //   .required(\"비밀번호를 한 번 더 입력해주세요.\"),\n  // name: yup\n  //   .string()\n  //   .required(\"이름을 입력해주세요.\")\n});\nexport default function CounselorSignup() {\n  _s();\n\n  const apiUrl = '/auth/signup';\n  const history = useHistory();\n\n  const signUp = data => {\n    axios.post(apiUrl, data).then(response => {\n      if (response.data.status === \"success\") {\n        alert(\"회원가입이 완료되었습니다.\");\n        history.push({\n          pathname: \"/CounselorLogin\"\n        });\n      } else {\n        alert(response.data.result.error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: values => {\n        signUp(values);\n      },\n      initialValues: {\n        email: '',\n        password: '',\n        confirm: '',\n        name: '',\n        phone: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationFormik01\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            name: \"email\",\n            value: values.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationFormik02\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: values.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationFormik03\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password check\",\n            name: \"confirm\",\n            value: values.confirm,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"confirm\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationFormik04\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC0C1\\uB2F4\\uAC00\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            name: \"name\",\n            value: values.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationFormik05\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC5F0\\uB77D\\uCC98\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter phone\",\n            name: \"phone\",\n            value: values.phone,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phone\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CounselorSignup, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CounselorSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounselorSignup\");","map":{"version":3,"sources":["/Users/kji/Project/Gitlab/mental-health-care/web/src/components/CounselorSignup.js"],"names":["React","Form","Button","useHistory","axios","Formik","ErrorMessage","yup","schema","object","shape","CounselorSignup","apiUrl","history","signUp","data","post","then","response","status","alert","push","pathname","result","error","values","email","password","confirm","name","phone","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {useHistory} from \"react-router\";\nimport axios from 'axios';\nimport { Formik, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\n\nconst schema = yup.object().shape({\n    // email:yup\n    //   .string()\n    //   .email(\"이메일 형식으로 입력하세요\")\n    //   .required(\"아이디를 입력해주세요\"),\n    // password: yup\n    //   .string()\n    //   .min(8, '8자리 이상으로 만들어주세요')\n    //   .max(16)\n    //   .matches(\"^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\",\"비밀번호는 영문/ 숫자/ 특수문자를 모두 포함해야 합니다.\")\n    //   .required(\"비밀번호를 입력해주세요\")\n    //   ,\n    // confirm: yup\n    //   .string()\n    //   .oneOf([yup.ref('password'), null],\n    //     '비밀번호가 일치하지 않습니다.')\n    //   .required(\"비밀번호를 한 번 더 입력해주세요.\"),\n\n    // name: yup\n    //   .string()\n    //   .required(\"이름을 입력해주세요.\")\n  });\n\nexport default function CounselorSignup(){\n    const apiUrl = '/auth/signup'\n    const history = useHistory();\n\n    const signUp = (data) => {\n        axios.post(apiUrl, data)\n            .then(response => {\n                if(response.data.status === \"success\") {\n                    alert(\"회원가입이 완료되었습니다.\");\n                    history.push({\n                        pathname: \"/CounselorLogin\",\n                    });\n                } else {\n                    alert(response.data.result.error);\n                }\n            });\n    };\n\n    return(\n        <div>\n            <Formik\n                validationSchema={schema}\n                onSubmit={values => {\n                    signUp(values);\n                }}\n                initialValues={{\n                    email: '',\n                    password: '',\n                    confirm: '',\n                    name: '',\n                    phone: ''\n                }}\n                >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    values,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"validationFormik01\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={values.email} onChange={handleChange} />\n                        <ErrorMessage name=\"email\" component=\"p\" /> \n                    </Form.Group>\n\n                    <Form.Group controlId=\"validationFormik02\">\n                        <Form.Label>비밀번호</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={values.password} onChange={handleChange} />\n                        <ErrorMessage name=\"password\" component=\"p\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"validationFormik03\">\n                        <Form.Label>비밀번호 확인</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password check\" name=\"confirm\" value={values.confirm} onChange={handleChange} />\n                        <ErrorMessage name=\"confirm\" component=\"p\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"validationFormik04\">\n                        <Form.Label>상담가명</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter name\" name=\"name\" value={values.name} onChange={handleChange} />\n                        <ErrorMessage name=\"name\" component=\"p\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"validationFormik05\">\n                        <Form.Label>연락처</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter phone\" name=\"phone\" value={values.phone} onChange={handleChange} />\n                        <ErrorMessage name=\"phone\" component=\"p\" />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        회원가입\n                    </Button>\n                    </Form>\n                )}\n                </Formik>\n\n            {/* <Form.Group controlId=\"counselorId\">\n                <Form.Label>아이디</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"아이디를 입력해주세요\"\n                    onChange={(e) => {\n                        setCounselorId(e.target);\n                    }}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"counselorPassword\">\n                <Form.Label>패스워드</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"패스워드를 입력해주세요\"\n                    onChange={(e) => {\n                        setCounselorPassword(e.target);\n                    }}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"counselorPasswordCheck\">\n                <Form.Label>비밀번호 확인</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"비밀번호를 입력해주세요\"\n                    onChange={(e) => {\n                        setCounselorPasswordCheck(e.target);\n                    }}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"counselorcertnumber\">\n                <Form.Label>자격번호\u001f</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"자격번호를 입력해주세요\"\n                    onChange={(e) => {\n                        setCounselorCertNumber(e.target);\n                    }}\n                ></Form.Control>\n            </Form.Group> */}\n\n            \n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}