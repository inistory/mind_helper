{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/Gitlab/mental-health-care/web/src/components/map/MapContainer.js\",\n    _s = $RefreshSig$();\n\n// MapContainer.js\nimport React, { useEffect } from \"react\";\nimport \"./map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nlet infowindow = new kakao.maps.InfoWindow({\n  zIndex: 1\n});\nlet lat = 37.3785528;\nlet lng = 127.114275;\n\nconst MapContainer = ({\n  searchPlace\n}) => {\n  _s();\n\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(lat, lng),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    const ps = new kakao.maps.services.Places();\n    ps.keywordSearch(searchPlace, placesSearchCB, {\n      location: new kakao.maps.LatLng(lat, lng),\n      bounds: new kakao.maps.LatLngBounds(new kakao.maps.LatLng(lat - 0.1, lng - 0.1), new kakao.maps.LatLng(lat + 0.1, lng + 0.1)),\n      // radius: 10000,\n      radius: 10000 // size: 5,\n\n    });\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x),\n        image: new kakao.maps.MarkerImage(\"https://i1.daumcdn.net/dmaps/apis/n_local_blit_04.png\", new kakao.maps.Size(31, 35), {\n          offset: new kakao.maps.Point(16, 34),\n          alt: \"마커 이미지 예제\",\n          shape: \"poly\",\n          coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n        })\n      }); // var customOverlay = new kakao.maps.CustomOverlay({\n      //   map: map,\n      //   position: new kakao.maps.LatLng(place.y, place.x),\n      //   content:\n      //     '<div id=\"customoverlay\" class=\"customoverlay\">' +\n      //     '  <a target=\"_blank\">' +\n      //     '    <span class=\"title\">' +\n      //     place.place_name +\n      //     \"</span>\" +\n      //     \"  </a>\" +\n      //     \"</div>\",\n      //   yAnchor: 1,\n      // });\n\n      kakao.maps.event.addListener(marker, \"mouseover\", function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출\n        infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + \"</div>\");\n        infowindow.open(map, marker); // customOverlay.setMap(map);\n      });\n      kakao.maps.event.addListener(marker, \"mouseout\", function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출\n        // infowindow.setContent(\n        //   '<div style=\"padding:10px;font-size:12px;color:red;\">' +\n        //     place.place_name +\n        //     \"</div>\"\n        // );\n        infowindow.close(); // customOverlay.setMap(null);\n      });\n    }\n  }, [searchPlace]); // 마커에 클릭이벤트를 등록\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"myMap\",\n    style: {\n      width: \"500px\",\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/kji/Project/Gitlab/mental-health-care/web/src/components/map/MapContainer.js"],"names":["React","useEffect","kakao","window","infowindow","maps","InfoWindow","zIndex","lat","lng","MapContainer","searchPlace","container","document","getElementById","options","center","LatLng","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","location","bounds","LatLngBounds","radius","data","status","pagination","Status","OK","i","length","displayMarker","extend","y","x","setBounds","place","marker","Marker","position","image","MarkerImage","Size","offset","Point","alt","shape","coords","event","addListener","setContent","place_name","open","close","width","height"],"mappings":"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","sourcesContent":["// MapContainer.js\n\nimport React, { useEffect } from \"react\";\nimport \"./map.css\";\nconst { kakao } = window;\nlet infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\nlet lat = 37.3785528;\nlet lng = 127.114275;\nconst MapContainer = ({ searchPlace }) => {\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(lat, lng),\n      level: 3,\n    };\n    const map = new kakao.maps.Map(container, options);\n\n    const ps = new kakao.maps.services.Places();\n\n    ps.keywordSearch(searchPlace, placesSearchCB, {\n      location: new kakao.maps.LatLng(lat, lng),\n      bounds: new kakao.maps.LatLngBounds(\n        new kakao.maps.LatLng(lat - 0.1, lng - 0.1),\n        new kakao.maps.LatLng(lat + 0.1, lng + 0.1)\n      ),\n      // radius: 10000,\n      radius: 10000,\n      // size: 5,\n    });\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x),\n        image: new kakao.maps.MarkerImage(\n          \"https://i1.daumcdn.net/dmaps/apis/n_local_blit_04.png\",\n          new kakao.maps.Size(31, 35),\n          {\n            offset: new kakao.maps.Point(16, 34),\n            alt: \"마커 이미지 예제\",\n            shape: \"poly\",\n            coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\",\n          }\n        ),\n      });\n\n      // var customOverlay = new kakao.maps.CustomOverlay({\n      //   map: map,\n      //   position: new kakao.maps.LatLng(place.y, place.x),\n      //   content:\n      //     '<div id=\"customoverlay\" class=\"customoverlay\">' +\n      //     '  <a target=\"_blank\">' +\n      //     '    <span class=\"title\">' +\n      //     place.place_name +\n      //     \"</span>\" +\n      //     \"  </a>\" +\n      //     \"</div>\",\n      //   yAnchor: 1,\n      // });\n      kakao.maps.event.addListener(marker, \"mouseover\", function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출\n        infowindow.setContent(\n          '<div style=\"padding:5px;font-size:12px;\">' +\n            place.place_name +\n            \"</div>\"\n        );\n        infowindow.open(map, marker);\n        // customOverlay.setMap(map);\n      });\n      kakao.maps.event.addListener(marker, \"mouseout\", function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출\n        // infowindow.setContent(\n        //   '<div style=\"padding:10px;font-size:12px;color:red;\">' +\n        //     place.place_name +\n        //     \"</div>\"\n        // );\n        infowindow.close();\n\n        // customOverlay.setMap(null);\n      });\n    }\n  }, [searchPlace]);\n\n  // 마커에 클릭이벤트를 등록\n\n  return (\n    <div\n      id=\"myMap\"\n      style={{\n        width: \"500px\",\n        height: \"500px\",\n      }}\n    ></div>\n  );\n};\n\nexport default MapContainer;\n"]},"metadata":{},"sourceType":"module"}