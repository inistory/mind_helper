{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/Gitlab/mental-health-care/web/src/components/map/MapContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nlet infowindow = new kakao.maps.InfoWindow({\n  zIndex: 1\n});\nlet lat = \"\";\nlet lon = \"\";\n\nconst MapContainer = ({\n  searchPlace\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        lat = position.coords.latitude; // 위도\n\n        lon = position.coords.longitude; // 경도\n\n        const container = document.getElementById(\"map1\");\n        const options = {\n          center: new kakao.maps.LatLng(lat, lon),\n          level: 3\n        };\n        const map = new kakao.maps.Map(container, options);\n        const ps = new kakao.maps.services.Places();\n        ps.keywordSearch(searchPlace, placesSearchCB, {\n          location: new kakao.maps.LatLng(lat, lon),\n          bounds: new kakao.maps.LatLngBounds(new kakao.maps.LatLng(lat - 0.1, lon - 0.1), new kakao.maps.LatLng(lat + 0.1, lon + 0.1)),\n          radius: 10000\n        });\n\n        function placesSearchCB(data, status, pagination) {\n          if (status === kakao.maps.services.Status.OK) {\n            let bounds = new kakao.maps.LatLngBounds();\n\n            for (let i = 0; i < data.length; i++) {\n              displayMarker(data[i]);\n              bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n            }\n\n            map.setBounds(bounds);\n          }\n        }\n\n        function displayMarker(place) {\n          let marker = new kakao.maps.Marker({\n            map: map,\n            position: new kakao.maps.LatLng(place.y, place.x),\n            image: new kakao.maps.MarkerImage(\"https://i1.daumcdn.net/dmaps/apis/n_local_blit_04.png\", new kakao.maps.Size(31, 35), {\n              offset: new kakao.maps.Point(16, 34),\n              alt: \"마커 이미지\",\n              shape: \"poly\",\n              coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\"\n            })\n          });\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            // 마커를 클릭하면 장소명이 인포윈도우에 표출\n            infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + \"</div>\");\n            infowindow.open(map, marker);\n          });\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n        }\n      });\n    }\n  }, [searchPlace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map1\",\n    style: {\n      width: \"350px\",\n      height: \"350px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/Users/kji/Project/Gitlab/mental-health-care/web/src/components/map/MapContainer.js"],"names":["React","useEffect","kakao","window","infowindow","maps","InfoWindow","zIndex","lat","lon","MapContainer","searchPlace","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","container","document","getElementById","options","center","LatLng","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","location","bounds","LatLngBounds","radius","data","status","pagination","Status","OK","i","length","displayMarker","extend","y","x","setBounds","place","marker","Marker","image","MarkerImage","Size","offset","Point","alt","shape","event","addListener","setContent","place_name","open","close","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./map.css\";\nconst { kakao } = window;\nlet infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\nlet lat = \"\";\nlet lon = \"\";\n\nconst MapContainer = ({ searchPlace }) => {\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        lat = position.coords.latitude; // 위도\n        lon = position.coords.longitude; // 경도\n\n        const container = document.getElementById(\"map1\");\n        const options = {\n          center: new kakao.maps.LatLng(lat, lon),\n          level: 3,\n        };\n        const map = new kakao.maps.Map(container, options);\n\n        const ps = new kakao.maps.services.Places();\n        ps.keywordSearch(searchPlace, placesSearchCB, {\n          location: new kakao.maps.LatLng(lat, lon),\n          bounds: new kakao.maps.LatLngBounds(\n            new kakao.maps.LatLng(lat - 0.1, lon - 0.1),\n            new kakao.maps.LatLng(lat + 0.1, lon + 0.1)\n          ),\n          radius: 10000,\n        });\n\n        function placesSearchCB(data, status, pagination) {\n          if (status === kakao.maps.services.Status.OK) {\n            let bounds = new kakao.maps.LatLngBounds();\n\n            for (let i = 0; i < data.length; i++) {\n              displayMarker(data[i]);\n              bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n            }\n\n            map.setBounds(bounds);\n          }\n        }\n\n        function displayMarker(place) {\n          let marker = new kakao.maps.Marker({\n            map: map,\n            position: new kakao.maps.LatLng(place.y, place.x),\n            image: new kakao.maps.MarkerImage(\n              \"https://i1.daumcdn.net/dmaps/apis/n_local_blit_04.png\",\n              new kakao.maps.Size(31, 35),\n              {\n                offset: new kakao.maps.Point(16, 34),\n                alt: \"마커 이미지\",\n                shape: \"poly\",\n                coords: \"1,20,1,9,5,2,10,0,21,0,27,3,30,9,30,20,17,33,14,33\",\n              }\n            ),\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            // 마커를 클릭하면 장소명이 인포윈도우에 표출\n            infowindow.setContent(\n              '<div style=\"padding:5px;font-size:12px;\">' +\n                place.place_name +\n                \"</div>\"\n            );\n            infowindow.open(map, marker);\n          });\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n        }\n      });\n    }\n  }, [searchPlace]);\n\n  return (\n    <div\n      id=\"map1\"\n      style={{\n        width: \"350px\",\n        height: \"350px\",\n      }}\n    ></div>\n  );\n};\n\nexport default MapContainer;\n"]},"metadata":{},"sourceType":"module"}