{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/Gitlab/mental-health-care/web/src/components/CounselorLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({//     email: yup\n  //       .string()\n  //       .email(\"이메일 형식으로 입력하세요\")\n  //       .required(\"아이디를 입력해주세요\"),\n  //     password: yup\n  //       .string()\n  //   // .min(8, '8자리 이상으로 만들어주세요')\n  //         // .max(16)\n  //         // .matches(\"^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\",\"비밀번호는 영문/ 숫자/ 특수문자를 모두 포함해야 합니다.\")\n  //       .required(\"비밀번호를 입력해주세요\")\n});\nexport default function CounselorLogin() {\n  _s();\n\n  const apiUrl = '/auth/login';\n  const history = useHistory();\n\n  const login = data => {\n    axios.post(apiUrl, data).then(response => {\n      if (response.data.status === \"success\") {\n        const access_token = response.data.result.access_token;\n        localStorage.setItem('access_token', access_token);\n        loginToChatCounselor();\n      } else {\n        alert(response.data.result.error);\n      }\n    });\n  };\n\n  const loginToChatCounselor = () => {\n    history.push({\n      pathname: \"/ChatCounselor\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    onSubmit: values => {\n      login(values);\n    },\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    children: ({\n      handleSubmit,\n      handleChange,\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: values.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: \"/CounselorSignup\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CounselorLogin, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CounselorLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounselorLogin\");","map":{"version":3,"sources":["/Users/kji/Project/Gitlab/mental-health-care/web/src/components/CounselorLogin.js"],"names":["React","useState","Form","Button","Link","useHistory","Formik","ErrorMessage","yup","axios","schema","object","shape","CounselorLogin","apiUrl","history","login","data","post","then","response","status","access_token","result","localStorage","setItem","loginToChatCounselor","alert","error","push","pathname","values","email","password","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\nimport axios from 'axios';\n\nconst schema = yup.object().shape({\n//     email: yup\n//       .string()\n//       .email(\"이메일 형식으로 입력하세요\")\n//       .required(\"아이디를 입력해주세요\"),\n//     password: yup\n//       .string()\n//   // .min(8, '8자리 이상으로 만들어주세요')\n//         // .max(16)\n//         // .matches(\"^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\",\"비밀번호는 영문/ 숫자/ 특수문자를 모두 포함해야 합니다.\")\n//       .required(\"비밀번호를 입력해주세요\")\n  });\n\nexport default function CounselorLogin(){\n    const apiUrl = '/auth/login'\n    const history = useHistory();\n    \n    const login = (data) => {\n        axios.post(apiUrl, data)\n            .then(response => {\n                if(response.data.status === \"success\") {\n                    const access_token = response.data.result.access_token;\n                    localStorage.setItem('access_token', access_token);\n\n                    loginToChatCounselor();\n                } else {\n                    alert(response.data.result.error);\n                }\n            });\n    }\n\n\n    const loginToChatCounselor = () =>{\n        history.push({\n            pathname: \"/ChatCounselor\",\n        })\n    };\n\n    return(\n        <Formik\n            validationSchema={schema}\n            onSubmit={values => {\n                login(values);\n            }}\n            initialValues={{\n                email: '',\n                password: '',\n            }}\n            >\n            {({\n                handleSubmit,\n                handleChange,\n                values\n            }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>아이디</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={values.email} onChange={handleChange} />\n                    <Form.Text className=\"text-muted\">\n                    <ErrorMessage name=\"email\" component=\"p\" />\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>비밀번호</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={values.password} onChange={handleChange} />\n                    <Form.Text className=\"text-muted\">\n                    <ErrorMessage name=\"password\" component=\"p\" />\n                    </Form.Text>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">로그인</Button>\n                <Link className=\"link\" to=\"/CounselorSignup\">회원가입하기</Link>\n                </Form>\n            )}\n        </Formik>\n    );\n}"]},"metadata":{},"sourceType":"module"}