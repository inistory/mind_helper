{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/Gitlab/mental-health-care/web/src/components/Psychometry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { FormControl, Form, FormLabel, RadioGroup, Radio, TablePagination, Typography } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  title: {\n    margin: theme.spacing(2)\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Psychometry() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const questionApiUrl = \"/test/question?question_id=\";\n  const itemApiUrl = \"/test/questionItem?question_id=\";\n  const responseApiUrl = \"/response/\";\n  const [name, setName] = useState(location.state.pname);\n  const [age, setAge] = useState(location.state.page);\n  const [gender, setGender] = useState(location.state.pgender);\n  const [region, setRegion] = useState(location.state.pregion);\n  const [userId, setUserId] = useState(location.state.pid);\n  const [question, setQuestion] = useState();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [item, setItem] = useState([]);\n  const questionlength = 20;\n  const arrayAnswer = [];\n\n  for (let i = 0; i < questionlength; i++) {\n    arrayAnswer.push(0);\n  }\n\n  const [answer, setAnswer] = useState(arrayAnswer);\n  const [complete, setComplete] = useState(false);\n  useEffect(() => {\n    async function fetch() {\n      const questionResponse = await axios.get(questionApiUrl + pageNumber);\n      const pagequestion = questionResponse.data.result[0].question;\n      setQuestion(pagequestion);\n      const itemResponse = await axios.get(itemApiUrl + pageNumber);\n      const item = itemResponse.data.result;\n      setItem(item);\n    }\n\n    fetch();\n  }, [pageNumber]); // useEffect(() =>{\n  //     async function fetch() {\n  //         debugger\n  //     };\n  //     fetch();\n  // }, []);\n  //debugger\n\n  const pushdataToResult = () => {\n    history.push({\n      pathname: \"/Result\",\n      state: {\n        panswer: answer,\n        pname: name,\n        page: age,\n        pgender: gender,\n        pregion: region,\n        puid: userId\n      }\n    });\n  };\n\n  const responsePost = responseData => {\n    //response post\n    axios.post(responseApiUrl, responseData).then(response => {\n      console.log(response);\n    });\n  }; // const pushdataToPersonalData = () =>{\n  //     history.push({\n  //         pathname: \"/PersonalData\",\n  //         state: {\n  //             pname : name,\n  //             page : age,\n  //             pgender : gender,\n  //             pregion : region\n  //         }\n  //     });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: 10,\n    paddingLeft: 50,\n    paddingRight: 50,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        component: \"h1\",\n        variant: \"h5\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [item.map(items => /*#__PURE__*/_jsxDEV(Button, {\n          align: \"center\",\n          color: \"primary\",\n          padding: 100,\n          fullWidth: true,\n          style: {\n            minHeight: '50px',\n            minWidth: '200px'\n          },\n          variant: \"outlined\",\n          onClick: () => {\n            const changeAnswer = [...answer];\n            changeAnswer[pageNumber - 1] = items.score;\n            setAnswer(changeAnswer); // this.variant=\"contained\";\n            //결과보기 버튼 활성화\n\n            setTimeout(function () {\n              if (pageNumber == questionlength) {\n                setComplete(true);\n              } else {\n                setPageNumber(pageNumber + 1);\n              }\n            }, 300);\n            const responseData = {\n              response_score: items.score,\n              question_id: pageNumber,\n              user_id: 1\n            };\n            responsePost(responseData);\n          },\n          children: items.question_item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: pushdataToResult,\n        disabled: !complete,\n        style: {\n          minHeight: '50px',\n          minWidth: '180px'\n        },\n        children: \"\\uACB0\\uACFC\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.notion.so/86a389ec9b4d4f419ac64e99810fd0de\",\n        children: \"\\uC11C\\uBE44\\uC2A4 \\uC18C\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/CounselorLogin\",\n        children: \"\\uC0C1\\uB2F4\\uC0AC \\uC804\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Psychometry, \"zJ+tK2u7VhXRoQwenmBgXIca7Nc=\", false, function () {\n  return [useStyles, useHistory, useLocation];\n});\n\n_c = Psychometry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Psychometry\");","map":{"version":3,"sources":["/Users/kji/Project/Gitlab/mental-health-care/web/src/components/Psychometry.js"],"names":["React","useState","useEffect","axios","Button","Box","useHistory","useLocation","FormControl","Form","FormLabel","RadioGroup","Radio","TablePagination","Typography","Pagination","Skeleton","CssBaseline","Container","makeStyles","CardMedia","ForumOutlinedIcon","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","title","form","width","submit","Psychometry","classes","history","location","questionApiUrl","itemApiUrl","responseApiUrl","name","setName","state","pname","age","setAge","page","gender","setGender","pgender","region","setRegion","pregion","userId","setUserId","pid","question","setQuestion","pageNumber","setPageNumber","item","setItem","questionlength","arrayAnswer","i","push","answer","setAnswer","complete","setComplete","fetch","questionResponse","get","pagequestion","data","result","itemResponse","pushdataToResult","pathname","panswer","puid","responsePost","responseData","post","then","response","console","log","map","items","minHeight","minWidth","changeAnswer","score","setTimeout","response_score","question_id","user_id","question_item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { FormControl, Form, FormLabel, RadioGroup, Radio, TablePagination, Typography} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    title: {\n        margin: theme.spacing(2),\n      },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n\n  }));\n\n\n\nexport default function Psychometry() {\n    const classes = useStyles();\n\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const questionApiUrl = \"/test/question?question_id=\";\n    const itemApiUrl = \"/test/questionItem?question_id=\";\n    const responseApiUrl = \"/response/\";\n\n    const [name, setName] = useState(location.state.pname);\n    const [age, setAge] = useState(location.state.page);\n    const [gender, setGender] = useState(location.state.pgender);\n    const [region, setRegion] = useState(location.state.pregion);\n    const [userId, setUserId] = useState(location.state.pid);\n    const [question, setQuestion] = useState();\n\n    const [pageNumber, setPageNumber] = useState(1);\n    const [item, setItem] = useState([]);\n\n    const questionlength = 20;\n    const arrayAnswer = [];\n    for (let i=0;i<questionlength;i++) {\n        arrayAnswer.push(0);\n    }\n    const [answer, setAnswer] = useState(arrayAnswer);\n\n    const [complete, setComplete] = useState(false);\n\n    useEffect(() => {\n        async function fetch() {\n            const questionResponse = await axios.get(questionApiUrl + pageNumber);\n            const pagequestion = questionResponse.data.result[0].question;\n            setQuestion(pagequestion);\n\n            const itemResponse = await axios.get(itemApiUrl + pageNumber);\n            const item = itemResponse.data.result;\n            setItem(item);\n        }\n        fetch();\n    }, [pageNumber]);\n\n    // useEffect(() =>{\n    //     async function fetch() {\n\n    //         debugger\n    //     };\n    //     fetch();\n    // }, []);\n    //debugger\n\n    const pushdataToResult = () => {\n        history.push({\n            pathname: \"/Result\",\n            state: {\n                panswer: answer,\n                pname: name,\n                page: age,\n                pgender: gender,\n                pregion: region,\n                puid: userId,\n            },\n        });\n    };\n\n    const responsePost = (responseData) => {\n        //response post\n        axios.post(responseApiUrl, responseData).then((response) => {\n            console.log(response);\n        });\n    };\n\n    // const pushdataToPersonalData = () =>{\n    //     history.push({\n    //         pathname: \"/PersonalData\",\n    //         state: {\n    //             pname : name,\n    //             page : age,\n    //             pgender : gender,\n    //             pregion : region\n    //         }\n    //     });\n    // };\n\n    return (\n\n        <Box pt={10} paddingLeft ={50} paddingRight ={50}>\n        <Container align = \"center\" >\n                <h1>🤖</h1>\n                <Typography className={classes.title} component=\"h1\" variant=\"h5\">\n                    {question}\n                </Typography>\n                <br/>\n                <br/>\n\n            <Container >\n            \n                {item.map((items) => (\n \n                <Button\n                    align = \"center\"\n                    color=\"primary\"\n                    padding = {100}\n                    fullWidth \n                    style={{ minHeight: '50px', minWidth : '200px'}}\n                    variant=\"outlined\"\n                    onClick={() => {\n                        const changeAnswer = [...answer];\n                        changeAnswer[pageNumber - 1] = items.score;\n                        setAnswer(changeAnswer);\n                        // this.variant=\"contained\";\n                        //결과보기 버튼 활성화\n                        setTimeout(function(){\n                            if (pageNumber == questionlength) {\n                                setComplete(true);\n                            } else {\n                                setPageNumber(pageNumber + 1);\n                            }\n                        }, 300);\n\n                        const responseData = {\n                            response_score: items.score,\n                            question_id: pageNumber,\n                            user_id: 1,\n                        };\n                        responsePost(responseData);\n\n                    }}>\n                    {items.question_item}\n                </Button>\n                \n           \n                ))}\n                \n            \n                    <br/>\n                    <br/>\n                    <br/>\n                {/*\n                <Pagination\n                    count={20}\n                    alignItems=\"center\"\n                    onChange={(e) => {\n                        setPageNumber(parseInt(e.target.innerText));\n                        // debugger\n                    }}/>  */}\n       \n            </Container>\n            \n            {/* <Button variant=\"contained\" onClick={clickAnswer}>{pageAnswer}</Button> */}\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={pushdataToPersonalData}>이전으로</Button> */}\n  \n            <br/>\n            <br/>\n            <br/>\n\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={pushdataToResult}\n                    disabled={!complete}\n                    style={{ minHeight: '50px', minWidth : '180px'}}\n                >\n                    결과보기\n                </Button>\n\n\n            \n        </Container>\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n        <div>\n                <hr></hr>\n                <a href=\"https://www.notion.so/86a389ec9b4d4f419ac64e99810fd0de\">\n                    서비스 소개\n                </a>{\" \"}\n                <a href=\"/CounselorLogin\">상담사 전용</a>\n        </div>\n        </Box>\n        \n\n\n \n\n\n    );\n}"]},"metadata":{},"sourceType":"module"}