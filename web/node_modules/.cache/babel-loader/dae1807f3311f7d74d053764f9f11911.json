{"ast":null,"code":"var _jsxFileName = \"/Users/kji/Project/Gitlab/mental-health-care/web/src/components/Psychometry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { FormControl, Form, FormLabel, RadioGroup, Radio, TablePagination } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Psychometry() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const questionApiUrl = \"/test/question?question_id=\";\n  const itemApiUrl = \"/test/questionItem?question_id=\";\n  const responseApiUrl = \"/response/\";\n  const [name, setName] = useState(location.state.pname);\n  const [age, setAge] = useState(location.state.page);\n  const [gender, setGender] = useState(location.state.pgender);\n  const [region, setRegion] = useState(location.state.pregion);\n  const [userId, setUserId] = useState(location.state.pid);\n  const [question, setQuestion] = useState();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [item, setItem] = useState([]);\n  const questionlength = 20;\n  const arrayAnswer = [];\n\n  for (let i = 0; i < questionlength; i++) {\n    arrayAnswer.push(0);\n  }\n\n  const [answer, setAnswer] = useState(arrayAnswer);\n  const [complete, setComplete] = useState(false);\n  useEffect(() => {\n    async function fetch() {\n      const questionResponse = await axios.get(questionApiUrl + pageNumber);\n      const pagequestion = questionResponse.data.result[0].question;\n      setQuestion(pagequestion);\n      const itemResponse = await axios.get(itemApiUrl + pageNumber);\n      const item = itemResponse.data.result;\n      setItem(item);\n    }\n\n    fetch();\n  }, [pageNumber]); // useEffect(() =>{\n  //     async function fetch() {\n  //         debugger\n  //     };\n  //     fetch();\n  // }, []);\n  //debugger\n\n  const pushdataToResult = () => {\n    history.push({\n      pathname: \"/Result\",\n      state: {\n        panswer: answer,\n        pname: name,\n        page: age,\n        pgender: gender,\n        pregion: region,\n        puid: userId\n      }\n    });\n  };\n\n  const responsePost = responseData => {\n    //response post\n    axios.post(responseApiUrl, responseData).then(response => {\n      console.log(response);\n    });\n  }; // const pushdataToPersonalData = () =>{\n  //     history.push({\n  //         pathname: \"/PersonalData\",\n  //         state: {\n  //             pname : name,\n  //             page : age,\n  //             pgender : gender,\n  //             pregion : region\n  //         }\n  //     });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      Height: \"sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [item.map(items => /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            const changeAnswer = [...answer];\n            changeAnswer[pageNumber - 1] = items.score;\n            setAnswer(changeAnswer); // this.variant=\"contained\";\n            //결과보기 버튼 활성화\n\n            setTimeout(function () {\n              if (pageNumber == questionlength) {\n                setComplete(true);\n              } else {\n                setPageNumber(pageNumber + 1);\n              }\n            }, 300);\n            const responseData = {\n              response_score: items.score,\n              question_id: pageNumber,\n              user_id: 1\n            };\n            responsePost(responseData);\n          },\n          children: items.question_item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: 20,\n        alignItems: \"center\",\n        onChange: e => {\n          setPageNumber(parseInt(e.target.innerText)); // debugger\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: pushdataToResult,\n        disabled: !complete,\n        children: \"\\uACB0\\uACFC\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.notion.so/86a389ec9b4d4f419ac64e99810fd0de\",\n        children: \"\\uC11C\\uBE44\\uC2A4 \\uC18C\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/CounselorLogin\",\n        children: \"\\uC0C1\\uB2F4\\uC0AC \\uC804\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Psychometry, \"cqLqEuxRJc5jToP3YGfG74gUe6Q=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Psychometry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Psychometry\");","map":{"version":3,"sources":["/Users/kji/Project/Gitlab/mental-health-care/web/src/components/Psychometry.js"],"names":["React","useState","useEffect","axios","Button","useHistory","useLocation","FormControl","Form","FormLabel","RadioGroup","Radio","TablePagination","Pagination","Skeleton","CssBaseline","Container","Typography","Psychometry","history","location","questionApiUrl","itemApiUrl","responseApiUrl","name","setName","state","pname","age","setAge","page","gender","setGender","pgender","region","setRegion","pregion","userId","setUserId","pid","question","setQuestion","pageNumber","setPageNumber","item","setItem","questionlength","arrayAnswer","i","push","answer","setAnswer","complete","setComplete","fetch","questionResponse","get","pagequestion","data","result","itemResponse","pushdataToResult","pathname","panswer","puid","responsePost","responseData","post","then","response","console","log","map","items","changeAnswer","score","setTimeout","response_score","question_id","user_id","question_item","e","parseInt","target","innerText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { FormControl, Form, FormLabel, RadioGroup, Radio, TablePagination} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Psychometry() {\n    const history = useHistory();\n    const location = useLocation();\n\n    const questionApiUrl = \"/test/question?question_id=\";\n    const itemApiUrl = \"/test/questionItem?question_id=\";\n    const responseApiUrl = \"/response/\";\n\n    const [name, setName] = useState(location.state.pname);\n    const [age, setAge] = useState(location.state.page);\n    const [gender, setGender] = useState(location.state.pgender);\n    const [region, setRegion] = useState(location.state.pregion);\n    const [userId, setUserId] = useState(location.state.pid);\n    const [question, setQuestion] = useState();\n\n    const [pageNumber, setPageNumber] = useState(1);\n    const [item, setItem] = useState([]);\n\n    const questionlength = 20;\n    const arrayAnswer = [];\n    for (let i=0;i<questionlength;i++) {\n        arrayAnswer.push(0);\n    }\n    const [answer, setAnswer] = useState(arrayAnswer);\n\n    const [complete, setComplete] = useState(false);\n\n    useEffect(() => {\n        async function fetch() {\n            const questionResponse = await axios.get(questionApiUrl + pageNumber);\n            const pagequestion = questionResponse.data.result[0].question;\n            setQuestion(pagequestion);\n\n            const itemResponse = await axios.get(itemApiUrl + pageNumber);\n            const item = itemResponse.data.result;\n            setItem(item);\n        }\n        fetch();\n    }, [pageNumber]);\n\n    // useEffect(() =>{\n    //     async function fetch() {\n\n    //         debugger\n    //     };\n    //     fetch();\n    // }, []);\n    //debugger\n\n    const pushdataToResult = () => {\n        history.push({\n            pathname: \"/Result\",\n            state: {\n                panswer: answer,\n                pname: name,\n                page: age,\n                pgender: gender,\n                pregion: region,\n                puid: userId,\n            },\n        });\n    };\n\n    const responsePost = (responseData) => {\n        //response post\n        axios.post(responseApiUrl, responseData).then((response) => {\n            console.log(response);\n        });\n    };\n\n    // const pushdataToPersonalData = () =>{\n    //     history.push({\n    //         pathname: \"/PersonalData\",\n    //         state: {\n    //             pname : name,\n    //             page : age,\n    //             pgender : gender,\n    //             pregion : region\n    //         }\n    //     });\n    // };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <CssBaseline />\n            <Container Height=\"sm\">\n\n            </Container>\n            <Container>\n                <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    {question}\n                </Typography>\n            </Container>\n            <Container>\n                {item.map((items) => (\n                    <Container maxWidth=\"xs\">\n                        <Button\n                            variant=\"outlined\"\n                            onClick={() => {\n                                const changeAnswer = [...answer];\n                                changeAnswer[pageNumber - 1] = items.score;\n                                setAnswer(changeAnswer);\n                                // this.variant=\"contained\";\n                                //결과보기 버튼 활성화\n                                setTimeout(function(){\n\n                                \n                                    if (pageNumber == questionlength) {\n                                        setComplete(true);\n                                    } else {\n                                        setPageNumber(pageNumber + 1);\n                                    }\n                                }, 300);\n                                const responseData = {\n                                    response_score: items.score,\n                                    question_id: pageNumber,\n                                    user_id: 1,\n                                };\n                                responsePost(responseData);\n                            }}\n                        >\n                            {items.question_item}\n                        </Button>\n                    </Container>\n                ))}\n            \n                <Pagination\n                    count={20}\n                    alignItems=\"center\"\n                    onChange={(e) => {\n                        setPageNumber(parseInt(e.target.innerText));\n                        // debugger\n                    }}\n                />\n            </Container>\n            \n            {/* <Button variant=\"contained\" onClick={clickAnswer}>{pageAnswer}</Button> */}\n            {/* <Button variant=\"contained\" color=\"primary\" onClick={pushdataToPersonalData}>이전으로</Button> */}\n            <Container>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={pushdataToResult}\n                    disabled={!complete}\n                >\n                    결과보기\n                </Button>\n            </Container>\n            \n            <div>\n                <hr></hr>\n                <a href=\"https://www.notion.so/86a389ec9b4d4f419ac64e99810fd0de\">\n                    서비스 소개\n        </a>{\" \"}\n                <a href=\"/CounselorLogin\">상담사 전용</a>\n            </div>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}